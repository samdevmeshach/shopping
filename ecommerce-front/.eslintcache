[{"F:\\shopping\\ecommerce-front\\src\\index.js":"1","F:\\shopping\\ecommerce-front\\src\\App.js":"2","F:\\shopping\\ecommerce-front\\src\\Routes.js":"3","F:\\shopping\\ecommerce-front\\src\\user\\Signup.js":"4","F:\\shopping\\ecommerce-front\\src\\user\\Signin.js":"5","F:\\shopping\\ecommerce-front\\src\\core\\Home.js":"6","F:\\shopping\\ecommerce-front\\src\\core\\Menu.js":"7","F:\\shopping\\ecommerce-front\\src\\core\\Layout.js":"8","F:\\shopping\\ecommerce-front\\src\\config.js":"9","F:\\shopping\\ecommerce-front\\src\\auth\\index.js":"10","F:\\shopping\\ecommerce-front\\src\\auth\\PrivateRoute.js":"11","F:\\shopping\\ecommerce-front\\src\\user\\UserDashboard.js":"12","F:\\shopping\\ecommerce-front\\src\\user\\AdminDashboard.js":"13","F:\\shopping\\ecommerce-front\\src\\auth\\AdminRoute.js":"14","F:\\shopping\\ecommerce-front\\src\\admin\\AddCategory.js":"15","F:\\shopping\\ecommerce-front\\src\\admin\\apiAdmin.js":"16","F:\\shopping\\ecommerce-front\\src\\admin\\AddProduct.js":"17","F:\\shopping\\ecommerce-front\\src\\core\\apiCore.js":"18","F:\\shopping\\ecommerce-front\\src\\core\\Card.js":"19","F:\\shopping\\ecommerce-front\\src\\core\\Shop.js":"20","F:\\shopping\\ecommerce-front\\src\\core\\Checkbox.js":"21","F:\\shopping\\ecommerce-front\\src\\core\\fixedPrice.js":"22","F:\\shopping\\ecommerce-front\\src\\core\\RadioBox.js":"23","F:\\shopping\\ecommerce-front\\src\\core\\Search.js":"24","F:\\shopping\\ecommerce-front\\src\\core\\Product.js":"25","F:\\shopping\\ecommerce-front\\src\\core\\ProductCard.js":"26","F:\\shopping\\ecommerce-front\\src\\core\\RelatedProductCard.js":"27","C:\\Users\\Sam\\Documents\\GitHub\\shopping\\ecommerce-front\\src\\index.js":"28","C:\\Users\\Sam\\Documents\\GitHub\\shopping\\ecommerce-front\\src\\Routes.js":"29","C:\\Users\\Sam\\Documents\\GitHub\\shopping\\ecommerce-front\\src\\user\\Signin.js":"30","C:\\Users\\Sam\\Documents\\GitHub\\shopping\\ecommerce-front\\src\\user\\Signup.js":"31","C:\\Users\\Sam\\Documents\\GitHub\\shopping\\ecommerce-front\\src\\core\\Home.js":"32","C:\\Users\\Sam\\Documents\\GitHub\\shopping\\ecommerce-front\\src\\core\\Shop.js":"33","C:\\Users\\Sam\\Documents\\GitHub\\shopping\\ecommerce-front\\src\\core\\Product.js":"34","C:\\Users\\Sam\\Documents\\GitHub\\shopping\\ecommerce-front\\src\\user\\AdminDashboard.js":"35","C:\\Users\\Sam\\Documents\\GitHub\\shopping\\ecommerce-front\\src\\auth\\AdminRoute.js":"36","C:\\Users\\Sam\\Documents\\GitHub\\shopping\\ecommerce-front\\src\\auth\\PrivateRoute.js":"37","C:\\Users\\Sam\\Documents\\GitHub\\shopping\\ecommerce-front\\src\\admin\\AddProduct.js":"38","C:\\Users\\Sam\\Documents\\GitHub\\shopping\\ecommerce-front\\src\\admin\\AddCategory.js":"39","C:\\Users\\Sam\\Documents\\GitHub\\shopping\\ecommerce-front\\src\\user\\UserDashboard.js":"40","C:\\Users\\Sam\\Documents\\GitHub\\shopping\\ecommerce-front\\src\\core\\apiCore.js":"41","C:\\Users\\Sam\\Documents\\GitHub\\shopping\\ecommerce-front\\src\\core\\Card.js":"42","C:\\Users\\Sam\\Documents\\GitHub\\shopping\\ecommerce-front\\src\\core\\Checkbox.js":"43","C:\\Users\\Sam\\Documents\\GitHub\\shopping\\ecommerce-front\\src\\core\\Search.js":"44","C:\\Users\\Sam\\Documents\\GitHub\\shopping\\ecommerce-front\\src\\core\\Layout.js":"45","C:\\Users\\Sam\\Documents\\GitHub\\shopping\\ecommerce-front\\src\\core\\fixedPrice.js":"46","C:\\Users\\Sam\\Documents\\GitHub\\shopping\\ecommerce-front\\src\\core\\RadioBox.js":"47","C:\\Users\\Sam\\Documents\\GitHub\\shopping\\ecommerce-front\\src\\core\\Menu.js":"48","C:\\Users\\Sam\\Documents\\GitHub\\shopping\\ecommerce-front\\src\\auth\\index.js":"49","C:\\Users\\Sam\\Documents\\GitHub\\shopping\\ecommerce-front\\src\\admin\\apiAdmin.js":"50","C:\\Users\\Sam\\Documents\\GitHub\\shopping\\ecommerce-front\\src\\config.js":"51","C:\\Users\\Sam\\Documents\\GitHub\\shopping\\ecommerce-front\\src\\core\\cartHelper.js":"52","C:\\Users\\Sam\\Documents\\GitHub\\shopping\\ecommerce-front\\src\\core\\Cart.js":"53","C:\\Users\\Sam\\Documents\\GitHub\\shopping\\ecommerce-front\\src\\core\\Checkout.js":"54","C:\\Users\\Sam\\Documents\\GitHub\\shopping\\ecommerce-front\\src\\core\\ShowImage.js":"55","C:\\Users\\Sam\\Documents\\GitHub\\shopping\\ecommerce-front\\src\\admin\\Orders.js":"56","C:\\Users\\Sam\\Documents\\GitHub\\shopping\\ecommerce-front\\src\\user\\Profile.js":"57"},{"size":206,"mtime":1609234088424,"results":"58","hashOfConfig":"59"},{"size":96,"mtime":1609233219631,"results":"60","hashOfConfig":"59"},{"size":1400,"mtime":1611557858702,"results":"61","hashOfConfig":"59"},{"size":2562,"mtime":1609877628697,"results":"62","hashOfConfig":"59"},{"size":3463,"mtime":1610724340849,"results":"63","hashOfConfig":"59"},{"size":1634,"mtime":1611590241356,"results":"64","hashOfConfig":"59"},{"size":2713,"mtime":1611590119699,"results":"65","hashOfConfig":"59"},{"size":473,"mtime":1611590083528,"results":"66","hashOfConfig":"59"},{"size":64,"mtime":1609237796660,"results":"67","hashOfConfig":"59"},{"size":1592,"mtime":1610022269541,"results":"68","hashOfConfig":"59"},{"size":450,"mtime":1610094478723,"results":"69","hashOfConfig":"59"},{"size":2201,"mtime":1610091890021,"results":"70","hashOfConfig":"59"},{"size":1840,"mtime":1611589937597,"results":"71","hashOfConfig":"59"},{"size":483,"mtime":1610092413863,"results":"72","hashOfConfig":"59"},{"size":3280,"mtime":1610808034459,"results":"73","hashOfConfig":"59"},{"size":1161,"mtime":1610721500032,"results":"74","hashOfConfig":"59"},{"size":6942,"mtime":1610827276275,"results":"75","hashOfConfig":"59"},{"size":2069,"mtime":1611602896081,"results":"76","hashOfConfig":"59"},{"size":2137,"mtime":1611561429434,"results":"77","hashOfConfig":"59"},{"size":3962,"mtime":1611589945196,"results":"78","hashOfConfig":"59"},{"size":948,"mtime":1611125843323,"results":"79","hashOfConfig":"59"},{"size":443,"mtime":1611128073058,"results":"80","hashOfConfig":"59"},{"size":649,"mtime":1611129700784,"results":"81","hashOfConfig":"59"},{"size":3428,"mtime":1611557179019,"results":"82","hashOfConfig":"59"},{"size":2049,"mtime":1611603793948,"results":"83","hashOfConfig":"59"},{"size":2810,"mtime":1611602690566,"results":"84","hashOfConfig":"59"},{"size":2295,"mtime":1611603662172,"results":"85","hashOfConfig":"59"},{"size":206,"mtime":1609234088424,"results":"86","hashOfConfig":"87"},{"size":1734,"mtime":1612178744110,"results":"88","hashOfConfig":"87"},{"size":3471,"mtime":1611835654141,"results":"89","hashOfConfig":"87"},{"size":2570,"mtime":1611835674137,"results":"90","hashOfConfig":"87"},{"size":1758,"mtime":1612152474002,"results":"91","hashOfConfig":"87"},{"size":3975,"mtime":1612017944416,"results":"92","hashOfConfig":"87"},{"size":2358,"mtime":1612022326011,"results":"93","hashOfConfig":"87"},{"size":2168,"mtime":1611837390414,"results":"94","hashOfConfig":"87"},{"size":483,"mtime":1610092413863,"results":"95","hashOfConfig":"87"},{"size":450,"mtime":1610094478723,"results":"96","hashOfConfig":"87"},{"size":7577,"mtime":1611836087870,"results":"97","hashOfConfig":"87"},{"size":3450,"mtime":1611836149445,"results":"98","hashOfConfig":"87"},{"size":2211,"mtime":1612178668031,"results":"99","hashOfConfig":"87"},{"size":2585,"mtime":1611772050773,"results":"100","hashOfConfig":"87"},{"size":4171,"mtime":1612090949146,"results":"101","hashOfConfig":"87"},{"size":948,"mtime":1611125843323,"results":"102","hashOfConfig":"87"},{"size":3428,"mtime":1611730519828,"results":"103","hashOfConfig":"87"},{"size":497,"mtime":1611835472057,"results":"104","hashOfConfig":"87"},{"size":443,"mtime":1611128073058,"results":"105","hashOfConfig":"87"},{"size":655,"mtime":1611892357371,"results":"106","hashOfConfig":"87"},{"size":3348,"mtime":1611766965795,"results":"107","hashOfConfig":"87"},{"size":1592,"mtime":1610022269541,"results":"108","hashOfConfig":"87"},{"size":2590,"mtime":1612177380064,"results":"109","hashOfConfig":"87"},{"size":64,"mtime":1609237796660,"results":"110","hashOfConfig":"87"},{"size":2039,"mtime":1611769918653,"results":"111","hashOfConfig":"87"},{"size":2193,"mtime":1611998953976,"results":"112","hashOfConfig":"87"},{"size":4389,"mtime":1612022373166,"results":"113","hashOfConfig":"87"},{"size":487,"mtime":1612021934689,"results":"114","hashOfConfig":"87"},{"size":6392,"mtime":1612177547462,"results":"115","hashOfConfig":"87"},{"size":430,"mtime":1612178543021,"results":"116","hashOfConfig":"87"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},"1wovsj1",{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"119"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"119"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"119"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"119"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"119"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"119"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"174","messages":"175","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},"6xk9s5",{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"180"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"180"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"180"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"180"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"180"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"180"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"180"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"180"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"180"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236","usedDeprecatedRules":"180"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239","usedDeprecatedRules":"180"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"180"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247","usedDeprecatedRules":"180"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"F:\\shopping\\ecommerce-front\\src\\index.js",[],["250","251"],"F:\\shopping\\ecommerce-front\\src\\App.js",[],"F:\\shopping\\ecommerce-front\\src\\Routes.js",[],"F:\\shopping\\ecommerce-front\\src\\user\\Signup.js",[],"F:\\shopping\\ecommerce-front\\src\\user\\Signin.js",[],"F:\\shopping\\ecommerce-front\\src\\core\\Home.js",["252","253"],"import React,{useState,useEffect,Fragment} from 'react'\r\nimport Layout from './Layout'\r\nimport {getProducts} from \"./apiCore\";\r\nimport MediaCard from './Card'\r\nimport Search from \"./Search\";\r\nconst Home = () => {\r\n\r\n    const [productsBySell,setProductsBySell] = useState([]);\r\n    const [productsByArrival,setProductsByArrival] = useState([]);\r\n    const  [error,setError] = useState(false)\r\n\r\n    const init = () => {\r\n        getProducts('sold').then(data => {\r\n            if(data.error){\r\n                setError(data.error)\r\n            }else {\r\n                setProductsBySell(data)\r\n            }\r\n        })\r\n\r\n        getProducts('createdAt').then(data => {\r\n            if(data.error){\r\n                setError(data.error)\r\n            }else {\r\n                setProductsByArrival(data)\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        init();\r\n    },[])\r\n\r\n    return (\r\n            <Layout title=\"Home Page\" description=\"E-commerce App\" className=\"container-fluid mt-4\">\r\n                <Search />\r\n                <h2>New Arrival</h2>\r\n                <div className=\"row\">\r\n                    { productsByArrival.map((product,i) => {\r\n                        return <MediaCard product={product} key={i} />\r\n                    })}\r\n                </div>\r\n                <hr />\r\n                <h2>Best Seller</h2>\r\n                <div className=\"row\">\r\n                    { productsBySell.map((product,i) => {\r\n                        return <MediaCard product={product} key={i} />\r\n                    })}\r\n                </div>\r\n            </Layout>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","F:\\shopping\\ecommerce-front\\src\\core\\Menu.js",[],"F:\\shopping\\ecommerce-front\\src\\core\\Layout.js",[],"F:\\shopping\\ecommerce-front\\src\\config.js",[],"F:\\shopping\\ecommerce-front\\src\\auth\\index.js",[],"F:\\shopping\\ecommerce-front\\src\\auth\\PrivateRoute.js",[],"F:\\shopping\\ecommerce-front\\src\\user\\UserDashboard.js",[],"F:\\shopping\\ecommerce-front\\src\\user\\AdminDashboard.js",[],"F:\\shopping\\ecommerce-front\\src\\auth\\AdminRoute.js",[],"F:\\shopping\\ecommerce-front\\src\\admin\\AddCategory.js",[],"F:\\shopping\\ecommerce-front\\src\\admin\\apiAdmin.js",[],"F:\\shopping\\ecommerce-front\\src\\admin\\AddProduct.js",["254"],"import React,{useState,useEffect} from 'react'\r\nimport Layout from '../core/Layout'\r\nimport {isAuthenticated} from '../auth'\r\nimport {createProduct} from './apiAdmin'\r\nimport {getCategories} from './apiAdmin'\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    backdrop: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        color: '#fff',\r\n    },\r\n}));\r\n\r\n\r\nconst AddProduct = () => {\r\n\r\n    const {user,token} = isAuthenticated() \r\n\r\n\r\nconst [values,setValues] = useState({\r\n    name:'',\r\n    description:'',\r\n    price:'',\r\n    categories:[],\r\n    category:'',\r\n    shipping:'',\r\n    quantity:'',\r\n    photo:'',\r\n    loading:false,\r\n    error:'',\r\n    createdProduct:'',\r\n    success:false,\r\n    redirectToProfile:false,\r\n    formData:''\r\n})\r\n\r\n\r\nconst {name,description,price,categories,category,success,quantity,loading,error,createdProduct,formData} = values\r\n\r\n\r\nconst init = () => {\r\n    getCategories().then(data => {\r\n        if(data.error){\r\n            setValues({...values,error:data.error})\r\n        }else {\r\n            setValues({...values,categories:data,formData:new FormData()})\r\n        }\r\n    })\r\n}\r\n\r\n    useEffect(() => {\r\n        init();\r\n    },[])\r\n\r\n    const handleChange = name => event => {\r\n        const value = name === 'photo' ? event.target.files[0] : event.target.value\r\n        formData.set(name,value)\r\n        setValues({...values,[name]:value})\r\n    }\r\n\r\n    const classes = useStyles();\r\n\r\n\r\n    const clickSubmit = (event) => {\r\n    event.preventDefault();\r\n    setValues({...values,error:false,loading:true})\r\n    createProduct(user._id,token,formData)\r\n    .then(data => {\r\n        if(data.error){\r\n            setValues({...values,error:data.error,loading:false})\r\n            console.log(formData)\r\n        } else {\r\n            setValues({\r\n                ...values,\r\n                name:'',\r\n                description:'',\r\n                price:'',\r\n                quantity:'',\r\n                photo:'',\r\n                loading:false,\r\n                createdProduct:data.name,\r\n                success:true,\r\n                formData: new FormData(),\r\n                redirectToProfile:false,\r\n            })\r\n        }\r\n    })\r\n}\r\n\r\n    const handleCloseError = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setValues({...values,error: false});\r\n    };\r\n\r\n    const handleCloseSuccess = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setValues({...values,success: false});\r\n    };\r\n\r\n    const handleCloseLoader = () => {\r\n            setValues({...values,loading: false})\r\n    }\r\n\r\n    const showError =() => (\r\n        <Snackbar open={error} autoHideDuration={6000} onClose={handleCloseError}>\r\n            <Alert onClose={handleCloseError} severity=\"error\">\r\n                Product already exist {error}\r\n            </Alert>\r\n        </Snackbar>\r\n    )\r\n\r\n    const showSuccess =() => (\r\n        <Snackbar open={success} autoHideDuration={6000} onClose={handleCloseSuccess}>\r\n            <Alert onClose={handleCloseSuccess} severity=\"success\">\r\n                {`${createdProduct} is created!`}\r\n            </Alert>\r\n        </Snackbar>\r\n    )\r\n\r\n    const showLoading = () => (\r\n        loading && (<Backdrop open={loading} className={classes.backdrop} onClick={handleCloseLoader}>\r\n            <CircularProgress color=\"inherit\" />\r\n        </Backdrop>)\r\n    )\r\n\r\n    const newProduct =() => (\r\n        <form className=\"mb-3\" onSubmit={clickSubmit}>\r\n            <h4>Photo</h4>\r\n            <div className=\"form-group\">\r\n                <label className=\"btn btn-secondary\">\r\n                    <input\r\n                        type=\"file\"\r\n                        name=\"photo\"\r\n                        accept=\"image/*\"\r\n                        onChange={handleChange(\"photo\")}\r\n                    />\r\n                </label>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Name</label>\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    onChange={handleChange(\"name\")}\r\n                    value={name}\r\n                />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Description</label>\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    onChange={handleChange(\"description\")}\r\n                    value={description}\r\n                />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Price</label>\r\n                <input\r\n                    type=\"number\"\r\n                    className=\"form-control\"\r\n                    onChange={handleChange(\"price\")}\r\n                    value={price}\r\n                />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Category</label>\r\n                <select className=\"form-control\" onChange={handleChange(\"category\")} value={category}>\r\n                    <option> Please select</option>\r\n                        {categories && categories.map((c,i) => (<option key={i} value={c._id}>{c.name}</option>))}\r\n                </select>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Shipping</label>\r\n                <select className=\"form-control\" onChange={handleChange(\"shipping\")}>\r\n                    <option> Please select</option>\r\n                    <option value=\"0\">No</option>\r\n                    <option value=\"1\">Yes</option>\r\n                </select>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Quantity</label>\r\n                <input\r\n                    type=\"number\"\r\n                    className=\"form-control\"\r\n                    onChange={handleChange(\"quantity\")}\r\n                    value={quantity}\r\n                />\r\n            </div>\r\n            <button className=\"btn btn-primary\"> Create Product</button>{showLoading()}\r\n        </form>\r\n    )\r\n\r\n    return(\r\n        <Layout title=\"Add a new product\" description={`G'day ${user.name}, Ready to add product `} className=\"container-fluid\"> \r\n            <div className=\"row\">\r\n                <div className=\"col-md-8 offset-md-2\">\r\n                    {showError()}\r\n                    {showSuccess()}\r\n                    {newProduct()}\r\n                </div>\r\n            </div>\r\n        </Layout>\r\n    )\r\n}\r\n\r\n\r\nexport default AddProduct","F:\\shopping\\ecommerce-front\\src\\core\\apiCore.js",[],"F:\\shopping\\ecommerce-front\\src\\core\\Card.js",[],"F:\\shopping\\ecommerce-front\\src\\core\\Shop.js",["255","256","257","258"],"import React,{useState,useEffect} from 'react'\r\nimport Layout from './Layout'\r\nimport {getProducts,getCategories,getFilteredProducts} from \"./apiCore\";\r\nimport Checkbox from \"./Checkbox\";\r\nimport {prices} from './fixedPrice'\r\nimport RadioBox from './RadioBox'\r\nimport MediaCard from \"./Card\";\r\n\r\n\r\nconst Shop = () => {\r\n\r\n    const [myFilter,setMyFilter] = useState({\r\n        filter:{category:[],price:[]}\r\n    })\r\n    const [categories,setCategories] = useState([])\r\n    const [error,setError] = useState(false)\r\n    const [limit,setLimit] = useState(6)\r\n    const [skip,setSkip] = useState(0)\r\n    const [size,setSize] = useState(0)\r\n    const [filterdResults,setFilteredResults] = useState([])\r\n\r\n\r\n    const init = () => {\r\n        getCategories().then(data => {\r\n            if(data.error){\r\n                setError(data.error)\r\n            }else{\r\n                setCategories(data)\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        init();\r\n        loadFilteredResult(skip,limit,myFilter.filter)\r\n    },[])\r\n\r\n\r\n    const handleFilter = (filter,filterBy) => {\r\n        const newFilter = {...myFilter}\r\n        newFilter.filter[filterBy] = filter\r\n\r\n        if(filterBy === 'price') {\r\n            let priceValue = handlePrice(filter)\r\n            newFilter.filter[filterBy] = priceValue\r\n        }\r\n\r\n        loadFilteredResult(myFilter.filter)\r\n        setMyFilter(newFilter)\r\n    }\r\n\r\n    const handlePrice = value => {\r\n        const data = prices\r\n        let array = []\r\n\r\n        for(let key in data){\r\n            if(data[key]._id === parseInt(value)){\r\n                array = data[key].array;\r\n            }\r\n        }\r\n        return array;\r\n    }\r\n\r\n    const loadFilteredResult = (newFilter) => {\r\n        getFilteredProducts(skip,limit,newFilter).then((data) => {\r\n            if(data.error){\r\n                setError(data.error)\r\n            }else {\r\n                setFilteredResults(data.data)\r\n                setSize(data.size)\r\n                setSkip(0)\r\n            }\r\n        })\r\n    }\r\n\r\n    const loadMore = () => {\r\n\r\n        let toSkip = skip + limit\r\n\r\n        getFilteredProducts(toSkip,limit,myFilter.filter).then((data) => {\r\n            if(data.error){\r\n                setError(data.error)\r\n            }else {\r\n                setFilteredResults([...filterdResults, ...data.data])\r\n                setSize(data.size)\r\n                setSkip(0)\r\n            }\r\n        })\r\n    }\r\n\r\n    const loadMoreButton = () => {\r\n        return (\r\n            size > 0 && size >= limit && (\r\n                <button className=\"btn btn-warning mb-5\" onClick={loadMore}>\r\n                    Load More\r\n                </button>\r\n            )\r\n        )\r\n    }\r\n\r\n    return(\r\n        <Layout title=\"Shop Page\" description=\"E-commerce App\" className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <div className=\"col-3\">\r\n                    <h4>Filter By Categories</h4>\r\n                    <ul>\r\n                        <Checkbox\r\n                            categories={categories}\r\n                            handleFilter={filter => handleFilter(filter,'category')}\r\n                        />\r\n                    </ul>\r\n\r\n                    <h4>Filter By Price</h4>\r\n                    <div>\r\n                        <RadioBox\r\n                            prices={prices}\r\n                            handleFilter={filter => handleFilter(filter,'price')}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-9\">\r\n                    <div className=\"row\">\r\n                        { filterdResults.map((product,i) => {\r\n                            return <MediaCard product={product} key={i} />\r\n                        })}\r\n                    </div>\r\n                    <hr />\r\n                    {loadMoreButton()}\r\n                </div>\r\n            </div>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default Shop","F:\\shopping\\ecommerce-front\\src\\core\\Checkbox.js",["259"],"import React,{useState,useEffect} from 'react'\r\n\r\nconst Checkbox = ({categories,handleFilter}) => {\r\n\r\n    const [checked,setChecked] = useState([])\r\n\r\n    const handleToggle = c => () => {\r\n        const currentCategoryId = checked.indexOf(c);   // Return first index or -1\r\n        const newCheckedCategoryId = [...checked]\r\n\r\n        if(currentCategoryId === -1){\r\n            newCheckedCategoryId.push(c)\r\n        }else{\r\n            newCheckedCategoryId.splice(currentCategoryId,1)\r\n        }\r\n        // console.log(newCheckedCategoryId)\r\n        handleFilter(newCheckedCategoryId)\r\n        setChecked(newCheckedCategoryId);\r\n    }\r\n\r\n    return categories.map((c,i) => (\r\n        <li key={i} className=\"list-unstyled\">\r\n            <input onChange={handleToggle(c._id)}  type=\"checkbox\" className=\"form-check-input\" />\r\n            <label className=\"form-check-label\" >{c.name}</label>\r\n        </li>\r\n    ))\r\n}\r\n\r\n\r\nexport default Checkbox;","F:\\shopping\\ecommerce-front\\src\\core\\fixedPrice.js",[],"F:\\shopping\\ecommerce-front\\src\\core\\RadioBox.js",["260"],"import React,{useState} from 'react'\r\n\r\nconst RadioBox = ({prices,handleFilter}) => {\r\n    const [value,setValue] = useState(0)\r\n\r\n    const handleChange = (event) => {\r\n        handleFilter(event.target.value)\r\n        setValue(event.target.value)\r\n    }\r\n\r\n    return prices.map((p,i) => (\r\n        <div key={i}>\r\n            <input\r\n                onChange={handleChange}\r\n                type=\"radio\"\r\n                name={p}\r\n                value={`${p._id}`}\r\n                className=\"mr-2 ml-4\"\r\n            />\r\n            <label className=\"form-check-label\" >{p.name}</label>\r\n        </div>\r\n    ))\r\n}\r\n\r\nexport default RadioBox\r\n\r\n\r\n","F:\\shopping\\ecommerce-front\\src\\core\\Search.js",["261"],"import React, {useEffect, useState} from \"react\";\r\nimport {getCategories,list} from './apiCore'\r\nimport MediaCard from \"./Card\";\r\n\r\nconst Search = () => {\r\n\r\n    const [value, setValue] = useState({\r\n        categories:[],\r\n        category:'',\r\n        search:'',\r\n        results:[],\r\n        searched:false\r\n    })\r\n\r\n    const {categories,category,search,results,searched} = value\r\n\r\n    const loadCategory = () => {\r\n        getCategories().then((data) => {\r\n            if(data.error) {\r\n                console.log(data.error)\r\n            }else{\r\n                setValue({...value,categories: data})\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadCategory()\r\n    },[])\r\n\r\n\r\n    const searchData = () =>{\r\n        // console.log(search,category)\r\n        if(search) {\r\n            // setValue({...value,re})\r\n            list({search: search || undefined,category: category})\r\n                .then(response => {\r\n                    if(response.error){\r\n                        console.log(response.error)\r\n                    }else {\r\n                        setValue({...value,results: response,searched: true})\r\n                    }\r\n                })\r\n        }\r\n    }\r\n\r\n    const searchSubmit = (e) => {\r\n        e.preventDefault()\r\n        searchData();\r\n    }\r\n\r\n    const handleChange = name => event => {\r\n        setValue({...value,[name]:event.target.value,searched: false})\r\n    }\r\n\r\n    const searchMessage = (searched,result) => {\r\n        if (searched && result.length > 0) {\r\n            return `Found ${result.length} Products`\r\n        }\r\n        if (searched && result.length < 1){\r\n            return `No product found`\r\n        }\r\n    }\r\n\r\n    const searchForm = () => (\r\n        <form onSubmit={searchSubmit}>\r\n            <span className=\"input-group-text\">\r\n                <div className=\"input-group input-group-lg\">\r\n                    <div className=\"input-group-prepend\">\r\n                        <select className=\"btn mr-2\" onChange={handleChange(\"category\")}>\r\n                            <option value=\"All\">All</option>\r\n                            {categories.map((c,i) => {\r\n                                return (<option key={i} value={c._id}>{c.name}</option>)\r\n                            })}\r\n                        </select>\r\n                    </div>\r\n                    <input\r\n                        type=\"search\"\r\n                        className=\"form-control\"\r\n                        onChange={handleChange(\"search\")}\r\n                        placeholder=\"Search by name\"\r\n                    />\r\n                </div>\r\n                <div className=\"btn input-group-append\" style={{border:'none'}}>\r\n                    <button className=\"btn btn-primary\">Search</button>\r\n                </div>\r\n            </span>\r\n        </form>\r\n    )\r\n\r\n    return(\r\n        <div className=\"row\">\r\n            <div className=\"container\">\r\n                {searchForm()}\r\n            </div>\r\n            <div className=\"container-fluid\">\r\n                <h2 className=\"mt-4 mb-4\">\r\n                    {searchMessage(searched,results)}\r\n                </h2>\r\n                <div className=\"row\">\r\n                    { results.map((product,i) => {\r\n                        return <MediaCard product={product} key={i} />\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Search","F:\\shopping\\ecommerce-front\\src\\core\\Product.js",["262","263","264","265","266"],"F:\\shopping\\ecommerce-front\\src\\core\\ProductCard.js",["267"],"F:\\shopping\\ecommerce-front\\src\\core\\RelatedProductCard.js",[],"C:\\Users\\Sam\\Documents\\GitHub\\shopping\\ecommerce-front\\src\\index.js",[],["268","269"],"C:\\Users\\Sam\\Documents\\GitHub\\shopping\\ecommerce-front\\src\\Routes.js",[],"C:\\Users\\Sam\\Documents\\GitHub\\shopping\\ecommerce-front\\src\\user\\Signin.js",[],"C:\\Users\\Sam\\Documents\\GitHub\\shopping\\ecommerce-front\\src\\user\\Signup.js",[],"C:\\Users\\Sam\\Documents\\GitHub\\shopping\\ecommerce-front\\src\\core\\Home.js",["270","271"],"import React,{useState,useEffect,Fragment} from 'react'\r\nimport Layout from './Layout'\r\nimport {getProducts} from \"./apiCore\";\r\nimport Card from './Card'\r\nimport Search from \"./Search\";\r\nconst Home = () => {\r\n\r\n    const [productsBySell,setProductsBySell] = useState([]);\r\n    const [productsByArrival,setProductsByArrival] = useState([]);\r\n    const  [error,setError] = useState(false)\r\n\r\n    const init = () => {\r\n        getProducts('sold').then(data => {\r\n            if(data.error){\r\n                setError(data.error)\r\n            }else {\r\n                setProductsBySell(data)\r\n                console.log('home',data)\r\n            }\r\n        })\r\n\r\n        getProducts('createdAt').then(data => {\r\n            if(data.error){\r\n                setError(data.error)\r\n            }else {\r\n                setProductsByArrival(data)\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        init();\r\n    },[])\r\n\r\n    return (\r\n            <Layout title=\"Home Page\" description=\"E-commerce App\" className=\"container-fluid mt-2\">\r\n                <Search />\r\n                <h2 className=\"text-secondary text-sm-center mt-sm-0\">New Arrival</h2>\r\n                <div className=\"row\">\r\n                    { productsByArrival.map((product,i) => {\r\n                        return <Card product={product} key={i} />\r\n                    })}\r\n                </div>\r\n                <hr />\r\n                <h2 className=\"text-secondary text-sm-center mt-2\">Best Seller</h2>\r\n                <div className=\"row\">\r\n                    { productsBySell.map((product,i) => {\r\n                        return <Card product={product} key={i} />\r\n                    })}\r\n                </div>\r\n            </Layout>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","C:\\Users\\Sam\\Documents\\GitHub\\shopping\\ecommerce-front\\src\\core\\Shop.js",["272","273"],"import React,{useState,useEffect} from 'react'\r\nimport Layout from './Layout'\r\nimport {getCategories,getFilteredProducts} from \"./apiCore\";\r\nimport Checkbox from \"./Checkbox\";\r\nimport {prices} from './fixedPrice'\r\nimport RadioBox from './RadioBox'\r\nimport Card from \"./Card\";\r\n\r\n\r\nconst Shop = () => {\r\n\r\n    const [myFilter,setMyFilter] = useState({\r\n        filter:{category:[],price:[]}\r\n    })\r\n    const [categories,setCategories] = useState([])\r\n    const [error,setError] = useState(false)\r\n    const [limit,setLimit] = useState(6)\r\n    const [skip,setSkip] = useState(0)\r\n    const [size,setSize] = useState(0)\r\n    const [filterdResults,setFilteredResults] = useState([])\r\n\r\n\r\n    const init = () => {\r\n        getCategories().then(data => {\r\n            if(data.error){\r\n                setError(data.error)\r\n            }else{\r\n                setCategories(data)\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        init();\r\n        loadFilteredResult(skip,limit,myFilter.filter)\r\n    },[])\r\n\r\n\r\n    const handleFilter = (filter,filterBy) => {\r\n        const newFilter = {...myFilter}\r\n        newFilter.filter[filterBy] = filter\r\n\r\n        if(filterBy === 'price') {\r\n            let priceValue = handlePrice(filter)\r\n            newFilter.filter[filterBy] = priceValue\r\n        }\r\n\r\n        loadFilteredResult(myFilter.filter)\r\n        setMyFilter(newFilter)\r\n    }\r\n\r\n    const handlePrice = value => {\r\n        const data = prices\r\n        let array = []\r\n\r\n        for(let key in data){\r\n            if(data[key]._id === parseInt(value)){\r\n                array = data[key].array;\r\n            }\r\n        }\r\n        return array;\r\n    }\r\n\r\n    const loadFilteredResult = (newFilter) => {\r\n        getFilteredProducts(skip,limit,newFilter).then((data) => {\r\n            if(data.error){\r\n                setError(data.error)\r\n            }else {\r\n                setFilteredResults(data.data)\r\n                setSize(data.size)\r\n                setSkip(0)\r\n            }\r\n        })\r\n    }\r\n\r\n    const loadMore = () => {\r\n\r\n        let toSkip = skip + limit\r\n        setLimit(toSkip)\r\n        getFilteredProducts(toSkip,limit,myFilter.filter).then((data) => {\r\n            if(data.error){\r\n                setError(data.error)\r\n            }else {\r\n                setFilteredResults([...filterdResults, ...data.data])\r\n                setSize(data.size)\r\n                setSkip(0)\r\n            }\r\n        })\r\n    }\r\n\r\n    const loadMoreButton = () => {\r\n        return (\r\n            size > 0 && size >= limit && (\r\n                <button className=\"btn btn-warning mb-5\" onClick={loadMore}>\r\n                    Load More\r\n                </button>\r\n            )\r\n        )\r\n    }\r\n\r\n    return(\r\n        <Layout title=\"Shop Page\" description=\"E-commerce App\" className=\"container-fluid mt-4\">\r\n            <div className=\"row\">\r\n                <div className=\"col-2 mt-3\">\r\n                    <h4>Filter By Categories</h4>\r\n                    <ul>\r\n                        <Checkbox\r\n                            categories={categories}\r\n                            handleFilter={filter => handleFilter(filter,'category')}\r\n                        />\r\n                    </ul>\r\n\r\n                    <h4>Filter By Price</h4>\r\n                    <div>\r\n                        <RadioBox\r\n                            prices={prices}\r\n                            handleFilter={filter => handleFilter(filter,'price')}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-10\">\r\n                    <div className=\"row\">\r\n                        { filterdResults.map((product,i) => {\r\n                            return <Card product={product} key={i} />\r\n                        })}\r\n                    </div>\r\n                    <hr />\r\n                    {loadMoreButton()}\r\n                </div>\r\n            </div>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default Shop","C:\\Users\\Sam\\Documents\\GitHub\\shopping\\ecommerce-front\\src\\core\\Product.js",["274","275","276","277","278"],"import React,{useState,useEffect,Fragment} from 'react'\r\nimport Layout from './Layout'\r\nimport {read,relatedProducts} from \"./apiCore\";\r\nimport Menu from \"./Menu\";\r\nimport Card from './Card'\r\nimport Search from \"./Search\";\r\nimport Grid from '@material-ui/core/Grid'\r\n\r\n\r\nconst Product = (props) => {\r\n\r\n    const [product,setProduct] = useState({})\r\n    const [error,setError] = useState(false)\r\n    const [relatedProduct,setRelatedProduct] = useState([])\r\n\r\n    const loadProduct = (productId) => {\r\n            read(productId).then((data) => {\r\n                if(data.error){\r\n                    setError(data.error)\r\n                }else {\r\n                    setProduct(data)\r\n                }\r\n            })\r\n\r\n            relatedProducts(productId).then((data) => {\r\n                if(data.error){\r\n                    setError(data.error)\r\n                }else {\r\n                    setRelatedProduct(data)\r\n                    console.log('relatedProduct',data)\r\n                }\r\n            })\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        const productId = props.match.params.productId;\r\n        loadProduct(productId)\r\n    },[props])\r\n\r\n    return (\r\n        <Layout title=\"Product Page\" description=\"\" className=\"container-fluid\">\r\n            <div className=\"row ml-3\">\r\n                <div className=\"col-5 mt-4\">\r\n                    {\r\n                        product &&\r\n                        product.description &&\r\n                        <Card\r\n                            product={product}\r\n                            showViewProductButton={false}\r\n                            style={{width: \"30rem\"}}\r\n                            imageStyle={{maxHeight: \"300px\", maxWidth: \"400px\", width: \"400px\", height: \"300px\"}}\r\n                        />\r\n                    }\r\n                </div>\r\n                <div className=\"col-sm-7\">\r\n                    <h2 className=\"text-secondary text-sm-center mt-4\">Related Products</h2>\r\n                    <div className=\"row\">\r\n                        {\r\n                            relatedProduct.map((product,i) => {\r\n                                return <Card product={product} key={i} />\r\n                            })\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default Product","C:\\Users\\Sam\\Documents\\GitHub\\shopping\\ecommerce-front\\src\\user\\AdminDashboard.js",[],"C:\\Users\\Sam\\Documents\\GitHub\\shopping\\ecommerce-front\\src\\auth\\AdminRoute.js",[],"C:\\Users\\Sam\\Documents\\GitHub\\shopping\\ecommerce-front\\src\\auth\\PrivateRoute.js",[],"C:\\Users\\Sam\\Documents\\GitHub\\shopping\\ecommerce-front\\src\\admin\\AddProduct.js",["279"],"import React,{useState,useEffect} from 'react'\r\nimport Layout from '../core/Layout'\r\nimport {isAuthenticated} from '../auth'\r\nimport {createProduct} from './apiAdmin'\r\nimport {getCategories} from './apiAdmin'\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    backdrop: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        color: '#fff',\r\n    },\r\n}));\r\n\r\n\r\nconst AddProduct = () => {\r\n\r\n    const {user,token} = isAuthenticated() \r\n\r\n\r\nconst [values,setValues] = useState({\r\n    name:'',\r\n    description:'',\r\n    price:'',\r\n    categories:[],\r\n    category:'',\r\n    shipping:'',\r\n    quantity:'',\r\n    photo:'',\r\n    loading:false,\r\n    error:'',\r\n    createdProduct:'',\r\n    success:false,\r\n    redirectToProfile:false,\r\n    formData:''\r\n})\r\n\r\n\r\nconst {name,description,price,categories,category,success,quantity,loading,error,createdProduct,formData} = values\r\n\r\n\r\nconst init = () => {\r\n    getCategories().then(data => {\r\n        if(data.error){\r\n            setValues({...values,error:data.error})\r\n        }else {\r\n            setValues({...values,categories:data,formData:new FormData()})\r\n        }\r\n    })\r\n}\r\n\r\n    useEffect(() => {\r\n        init();\r\n    },[])\r\n\r\n    const handleChange = name => event => {\r\n        const value = name === 'photo' ? event.target.files[0] : event.target.value\r\n        formData.set(name,value)\r\n        setValues({...values,[name]:value})\r\n    }\r\n\r\n    const classes = useStyles();\r\n\r\n\r\n    const clickSubmit = (event) => {\r\n    event.preventDefault();\r\n    setValues({...values,error:false,loading:true})\r\n    createProduct(user._id,token,formData)\r\n    .then(data => {\r\n        if(data.error){\r\n            setValues({...values,error:data.error,loading:false})\r\n            console.log(formData)\r\n        } else {\r\n            setValues({\r\n                ...values,\r\n                name:'',\r\n                description:'',\r\n                price:'',\r\n                quantity:'',\r\n                photo:'',\r\n                loading:false,\r\n                createdProduct:data.name,\r\n                success:true,\r\n                formData: new FormData(),\r\n                redirectToProfile:false,\r\n            })\r\n        }\r\n    })\r\n}\r\n\r\n    const handleCloseError = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setValues({...values,error: false});\r\n    };\r\n\r\n    const handleCloseSuccess = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setValues({...values,success: false});\r\n    };\r\n\r\n    const handleCloseLoader = () => {\r\n            setValues({...values,loading: false})\r\n    }\r\n\r\n    const showError =() => (\r\n        <Snackbar open={error} autoHideDuration={6000} onClose={handleCloseError}>\r\n            <Alert onClose={handleCloseError} severity=\"error\">\r\n                Product already exist {error}\r\n            </Alert>\r\n        </Snackbar>\r\n    )\r\n\r\n    const showSuccess =() => (\r\n        <Snackbar open={success} autoHideDuration={6000} onClose={handleCloseSuccess}>\r\n            <Alert onClose={handleCloseSuccess} severity=\"success\">\r\n                {`${createdProduct} is created!`}\r\n            </Alert>\r\n        </Snackbar>\r\n    )\r\n\r\n    const showLoading = () => (\r\n        loading && (<Backdrop open={loading} className={classes.backdrop} onClick={handleCloseLoader}>\r\n            <CircularProgress color=\"inherit\" />\r\n        </Backdrop>)\r\n    )\r\n\r\n    const goBack = () => (\r\n        <div className=\"mt-2 mb-5\">\r\n            <Link to=\"/admin/dashboard\" className=\"text-warning\">Back to Dashboard </Link>\r\n        </div>\r\n    )\r\n\r\n    const newProduct =() => (\r\n        <div>\r\n            <h2 className=\"text-secondary text-sm-center mt-3\">Add New Product</h2>\r\n            <form className=\"mb-3 mt-3\" onSubmit={clickSubmit}>\r\n                <h4>Photo</h4>\r\n                <div className=\"form-group\">\r\n                    <label className=\"btn btn-secondary\">\r\n                        <input\r\n                            type=\"file\"\r\n                            name=\"photo\"\r\n                            accept=\"image/*\"\r\n                            onChange={handleChange(\"photo\")}\r\n                        />\r\n                    </label>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label className=\"text-muted\">Name</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        onChange={handleChange(\"name\")}\r\n                        value={name}\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label className=\"text-muted\">Description</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        onChange={handleChange(\"description\")}\r\n                        value={description}\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label className=\"text-muted\">Price</label>\r\n                    <input\r\n                        type=\"number\"\r\n                        className=\"form-control\"\r\n                        onChange={handleChange(\"price\")}\r\n                        value={price}\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label className=\"text-muted\">Category</label>\r\n                    <select className=\"form-control\" onChange={handleChange(\"category\")} value={category}>\r\n                        <option> Please select</option>\r\n                        {categories && categories.map((c,i) => (<option key={i} value={c._id}>{c.name}</option>))}\r\n                    </select>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label className=\"text-muted\">Shipping</label>\r\n                    <select className=\"form-control\" onChange={handleChange(\"shipping\")}>\r\n                        <option> Please select</option>\r\n                        <option value=\"0\">No</option>\r\n                        <option value=\"1\">Yes</option>\r\n                    </select>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label className=\"text-muted\">Quantity</label>\r\n                    <input\r\n                        type=\"number\"\r\n                        className=\"form-control\"\r\n                        onChange={handleChange(\"quantity\")}\r\n                        value={quantity}\r\n                    />\r\n                </div>\r\n                <button className=\"btn btn-primary\"> Create Product</button>{showLoading()}\r\n            </form>\r\n        </div>\r\n    )\r\n\r\n    return(\r\n        <Layout title=\"Add a new product\" description={`G'day ${user.name}, Ready to add product `} className=\"container-fluid mt-4\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-8 offset-md-2\">\r\n                    {showError()}\r\n                    {showSuccess()}\r\n                    {newProduct()}\r\n                    {goBack()}\r\n                </div>\r\n            </div>\r\n        </Layout>\r\n    )\r\n}\r\n\r\n\r\nexport default AddProduct","C:\\Users\\Sam\\Documents\\GitHub\\shopping\\ecommerce-front\\src\\admin\\AddCategory.js",[],"C:\\Users\\Sam\\Documents\\GitHub\\shopping\\ecommerce-front\\src\\user\\UserDashboard.js",[],"C:\\Users\\Sam\\Documents\\GitHub\\shopping\\ecommerce-front\\src\\core\\apiCore.js",[],"C:\\Users\\Sam\\Documents\\GitHub\\shopping\\ecommerce-front\\src\\core\\Card.js",["280","281"],"import React, { useState } from 'react';\r\nimport { Link, Redirect,useHistory } from 'react-router-dom';\r\nimport ShowImage from './ShowImage';\r\nimport moment from 'moment';\r\nimport {FaCartPlus} from 'react-icons/fa'\r\nimport { addItem, updateItem, removeItem } from './cartHelper';\r\n\r\nconst Card = ({\r\n                  product,\r\n                  showViewProductButton = true,\r\n                  showAddToCartButton = true,\r\n                  cartUpdate = false,\r\n                  showRemoveProductButton = false,\r\n                  setRun = f => f,\r\n                  run = undefined,\r\n                  style = {width: \"15rem\",cursor:\"pointer\"},\r\n                  imageStyle={maxHeight:\"200px\",maxWidth:\"200px\",width:\"200px\",height:\"200px\"}\r\n                  // changeCartSize\r\n              }) => {\r\n    const [redirect, setRedirect] = useState(false);\r\n    const [count, setCount] = useState(product.count);\r\n    let history = useHistory();\r\n\r\n\r\n    const productPage = () => {\r\n        history.push(`/product/${product._id}`);\r\n    }\r\n\r\n    const addToCart = () => {\r\n        addItem(product,() => setRedirect(true));\r\n    };\r\n\r\n    const shouldRedirect = redirect => {\r\n        if (redirect) {\r\n            return <Redirect to=\"/cart\" />;\r\n        }\r\n    };\r\n\r\n    const showAddToCartBtn = showAddToCartButton => {\r\n        return (\r\n            showAddToCartButton && (\r\n                <button onClick={addToCart} className=\"btn btn-sm btn-warning\">\r\n                    Add to cart\r\n                </button>\r\n            )\r\n        );\r\n    };\r\n\r\n    const showStock = quantity => {\r\n        return quantity > 0 ? (\r\n            <span className=\"badge badge-primary badge-pill\">In Stock </span>\r\n        ) : (\r\n            <span className=\"badge badge-danger badge-pill\">Out of Stock </span>\r\n        );\r\n    };\r\n\r\n    const handleChange = productId => event => {\r\n        setRun(!run); // run useEffect in parent Cart\r\n        setCount(event.target.value < 1 ? 1 : event.target.value);\r\n        if (event.target.value >= 1) {\r\n            updateItem(productId, event.target.value);\r\n        }\r\n    };\r\n\r\n    const showCartUpdateOptions = cartUpdate => {\r\n        return (\r\n            cartUpdate && (\r\n                <div>\r\n                    <div className=\"input-group \">\r\n                        <div className=\"input-group-prepend\">\r\n                            <span className=\"input-group-text\">Adjust Quantity</span>\r\n                        </div>\r\n                        <input type=\"number\" className=\"form-control\" value={count} onChange={handleChange(product._id)} />\r\n                    </div>\r\n                </div>\r\n            )\r\n        );\r\n    };\r\n    const showRemoveButton = showRemoveProductButton => {\r\n        return (\r\n                showRemoveProductButton && (\r\n                <button\r\n                    onClick={() => {\r\n                        removeItem(product._id);\r\n                        setRun(!run); // run useEffect in parent Cart\r\n                    }}\r\n                    className=\"btn btn-danger\"\r\n                >\r\n                    Remove Product\r\n                </button>\r\n            )\r\n        );\r\n    };\r\n    return (\r\n        <div className=\"card ml-3 mt-3\" style={style}>\r\n            <div className=\"card-body\" onClick={productPage}>\r\n                {shouldRedirect(redirect)}\r\n                <ShowImage item={product} url=\"product\" imageStyle={imageStyle} />\r\n                <div className=\"text-monospace\">{product.name} </div>\r\n                <div className=\"text-monospace\">Rs.{product.price}</div>\r\n                <div className=\"text-monospace\">Category: {product.category && product.category.name}</div>\r\n                <div className=\"text-monospace\">Added on {moment(product.createdAt).fromNow()}</div>\r\n                {showStock(product.quantity)}\r\n                {/*<br />*/}\r\n\r\n\r\n\r\n                {/*{showViewButton(showViewProductButton)}*/}\r\n            </div>\r\n            {showCartUpdateOptions(cartUpdate)}\r\n            {showAddToCartBtn(showAddToCartButton)}\r\n            {showRemoveButton(showRemoveProductButton)}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Card;","C:\\Users\\Sam\\Documents\\GitHub\\shopping\\ecommerce-front\\src\\core\\Checkbox.js",["282"],"C:\\Users\\Sam\\Documents\\GitHub\\shopping\\ecommerce-front\\src\\core\\Search.js",["283"],"C:\\Users\\Sam\\Documents\\GitHub\\shopping\\ecommerce-front\\src\\core\\Layout.js",[],"C:\\Users\\Sam\\Documents\\GitHub\\shopping\\ecommerce-front\\src\\core\\fixedPrice.js",[],"C:\\Users\\Sam\\Documents\\GitHub\\shopping\\ecommerce-front\\src\\core\\RadioBox.js",["284"],"import React,{useState} from 'react'\r\n\r\nconst RadioBox = ({prices,handleFilter}) => {\r\n    // const [value,setValue] = useState(0)\r\n\r\n    const handleChange = (event) => {\r\n        handleFilter(event.target.value)\r\n        // setValue(event.target.value)\r\n    }\r\n\r\n    return prices.map((p,i) => (\r\n        <div key={i}>\r\n            <input\r\n                onChange={handleChange}\r\n                type=\"radio\"\r\n                name={p}\r\n                value={`${p._id}`}\r\n                className=\"mr-2 ml-4\"\r\n            />\r\n            <label className=\"form-check-label\" >{p.name}</label>\r\n        </div>\r\n    ))\r\n}\r\n\r\nexport default RadioBox\r\n\r\n\r\n","C:\\Users\\Sam\\Documents\\GitHub\\shopping\\ecommerce-front\\src\\core\\Menu.js",["285","286","287"],"import React, { Fragment } from 'react'\r\nimport {Link, Redirect, withRouter} from 'react-router-dom'\r\nimport {signout,isAuthenticated} from '../auth'\r\nimport {totalItem} from './cartHelper'\r\nimport Search from \"./Search\";\r\n\r\nconst isActive = (history,path) =>{\r\n    if(history.location.pathname === path){\r\n        return {color :'#ff9900'}\r\n    }\r\n    else{\r\n        return {color:'#ffffff'}\r\n    }\r\n}\r\n\r\nconst Menu = ({history}) => {\r\n\r\n\r\n    return (\r\n        <div>\r\n            <ul className=\"nav nav-tabs bg-secondary\">\r\n                <div className=\"navbar-brand\" href=\"/home\">\r\n                    <img src=\"\" width=\"30\" height=\"30\"\r\n                         className=\"d-inline-block align-top\" alt=\"\" />\r\n                    <a className=\"text-light text-decoration-none\" >Meena Store</a>\r\n                </div>\r\n                <li className=\"nav-items\">\r\n                    <Link className=\"nav-link\" style={isActive(history,\"/\")} to=\"/\">\r\n                        Home\r\n                    </Link>\r\n                </li>\r\n                <li className=\"nav-items\">\r\n                    <Link className=\"nav-link\" style={isActive(history,\"/shop\")} to=\"/shop\">\r\n                        Shop\r\n                    </Link>\r\n                </li>\r\n                <li className=\"nav-items\">\r\n                    <Link className=\"nav-link\" style={isActive(history,\"/cart\")} to=\"/cart\">\r\n                        Cart <sup><small className=\"cart-badge\">{totalItem()}</small></sup>\r\n                    </Link>\r\n                </li>\r\n                {isAuthenticated() && isAuthenticated().user.role === 0  &&(\r\n                    <li className=\"nav-items\">\r\n                        <Link className=\"nav-link\" style={isActive(history,\"/user/dashboard\")} to=\"/user/dashboard\"> Dashboard </Link>\r\n                    </li>\r\n                )}\r\n\r\n                {isAuthenticated() && isAuthenticated().user.role === 1 &&(\r\n                    <li className=\"nav-items\">\r\n                        <Link className=\"nav-link\" style={isActive(history,\"/admin/dashboard\")} to=\"/admin/dashboard\"> Dashboard </Link>\r\n                    </li>\r\n                )}\r\n\r\n\r\n                {!isAuthenticated() && (\r\n                    <Fragment>\r\n                        <li className=\"nav-items\">\r\n                            <Link className=\"nav-link\" style={isActive(history,\"/signin\")} to=\"/signin\"> Signin </Link>\r\n                        </li>\r\n                        <li className=\"nav-items\">\r\n                            <Link className=\"nav-link\" style={isActive(history,\"/signup\")} to=\"/signup\"> Signup </Link>\r\n                        </li>\r\n                    </Fragment>\r\n                )}\r\n                {isAuthenticated() && (\r\n                    <li className=\"nav-items\">\r\n                        <span className=\"nav-link\" style={{cursor:\"pointer\",color:\"#ffffff\"}}\r\n                            onClick={() => signout(() => {\r\n                                history.push('/')\r\n                            })}>\r\n                                Signout\r\n                        </span>\r\n                    </li>\r\n                )}\r\n                {/*<li className=\"nav-items\">*/}\r\n                {/*    <Search/>*/}\r\n                {/*</li>*/}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(Menu)\r\n\r\n","C:\\Users\\Sam\\Documents\\GitHub\\shopping\\ecommerce-front\\src\\auth\\index.js",[],"C:\\Users\\Sam\\Documents\\GitHub\\shopping\\ecommerce-front\\src\\admin\\apiAdmin.js",[],"C:\\Users\\Sam\\Documents\\GitHub\\shopping\\ecommerce-front\\src\\config.js",[],"C:\\Users\\Sam\\Documents\\GitHub\\shopping\\ecommerce-front\\src\\core\\cartHelper.js",["288","289","290","291"],"export const addItem = (item,next) => {\r\n    let cart = [];\r\n    if(typeof window !== undefined) {\r\n        if(localStorage.getItem('cart')) {\r\n            cart = JSON.parse(localStorage.getItem('cart'))\r\n        }\r\n\r\n        cart.push({\r\n            ...item,\r\n            count:1\r\n        })\r\n\r\n        cart = Array.from(new Set(cart.map(p => p._id))).map(id => {\r\n            return cart.find(p => p._id === id)\r\n        })\r\n\r\n        localStorage.setItem('cart',JSON.stringify(cart))\r\n        next();\r\n    }\r\n}\r\n\r\n\r\nexport const totalItem = () => {\r\n    if(typeof window !== undefined) {\r\n        if(localStorage.getItem('cart')) {\r\n            return JSON.parse(localStorage.getItem('cart')).length\r\n        }\r\n    }\r\n    return 0;\r\n}\r\n\r\nexport const getCart = () => {\r\n    if(typeof window !== undefined) {\r\n        if(localStorage.getItem('cart')) {\r\n            return JSON.parse(localStorage.getItem('cart'))\r\n        }\r\n    }\r\n    return 0;\r\n}\r\n\r\nexport const updateItem = (productId,count) => {\r\n    let cart = []\r\n    if (typeof window !== undefined) {\r\n        if (localStorage.getItem('cart')) {\r\n            cart = JSON.parse(localStorage.getItem('cart'))\r\n        }\r\n\r\n        cart.map((product,i) => {\r\n            if(product._id == productId){\r\n                cart[i].count = count;\r\n            }\r\n        })\r\n\r\n        localStorage.setItem('cart',JSON.stringify(cart))\r\n    }\r\n}\r\n\r\nexport const removeItem = (productId) => {\r\n    let cart = []\r\n    if (typeof window !== undefined) {\r\n        if (localStorage.getItem('cart')) {\r\n            cart = JSON.parse(localStorage.getItem('cart'))\r\n        }\r\n\r\n        cart.map((product,i) => {\r\n            if(product._id == productId){\r\n                cart.splice(i,1)\r\n            }\r\n        })\r\n\r\n        localStorage.setItem('cart',JSON.stringify(cart))\r\n    }\r\n    return cart\r\n}\r\n\r\nexport const deleteCart = () => {\r\n\r\n    if (typeof window !== undefined) {\r\n        if (localStorage.getItem('cart')) {\r\n            localStorage.removeItem('cart')\r\n        }\r\n    }\r\n}","C:\\Users\\Sam\\Documents\\GitHub\\shopping\\ecommerce-front\\src\\core\\Cart.js",["292"],"import React, { useState, useEffect } from 'react';\r\nimport Layout from './Layout';\r\nimport { Link } from 'react-router-dom';\r\nimport Checkout from './Checkout';\r\nimport MediaCard from \"./Card\";\r\nimport {getCart} from './cartHelper'\r\nimport {isAuthenticated} from \"../auth\";\r\n\r\nconst Cart = () => {\r\n    const [items, setItems] = useState([]);\r\n    // const [cartSize, setCartSize] = useState([]);\r\n    const [run, setRun] = useState(false);\r\n\r\n    useEffect(() => {\r\n        setItems(getCart());\r\n    }, [run]);\r\n\r\n    const showItems = items => {\r\n        return (\r\n            <div >\r\n                <h2>Your cart has {`${items.length}`} items</h2>\r\n                <hr />\r\n                {items.map((product, i) => (\r\n                    <MediaCard\r\n                        key={i}\r\n                        product={product}\r\n                        showAddToCartButton={false}\r\n                        cartUpdate={true}\r\n                        showRemoveProductButton={true}\r\n                        setRun={setRun}\r\n                        run={run}\r\n                        size=\"col-sm-5\"\r\n                    />\r\n                ))}\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const noItemsMessage = () => (\r\n        <h3>\r\n            <div className=\"text-danger\">Your Cart is empty</div> <br />\r\n            <Link to=\"/shop\">\r\n                <button className=\"btn btn-warning\">\r\n                    Continue shopping\r\n                </button>\r\n            </Link>\r\n        </h3>\r\n    );\r\n\r\n    return (\r\n        <Layout title=\"Shopping Cart\" description=\"Checkout now!\" className=\"container-fluid mt-4\">\r\n            <div className=\"row\">\r\n                <div className=\"col-6\">\r\n                        {items.length > 0 ? showItems(items) : noItemsMessage()}\r\n                </div>\r\n                <div className=\"col-6\">\r\n                    <h2>Your Cart Summary</h2>\r\n                    <hr />\r\n                    <Checkout\r\n                        products={items}\r\n                        setRun={setRun}\r\n                        run={run}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default Cart;","C:\\Users\\Sam\\Documents\\GitHub\\shopping\\ecommerce-front\\src\\core\\Checkout.js",["293","294"],"import React, { useState, useEffect } from 'react';\r\nimport { isAuthenticated } from '../auth';\r\nimport { Link } from 'react-router-dom';\r\nimport {createOrder} from './apiCore'\r\nimport {deleteCart, removeItem} from './cartHelper'\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\n\r\nconst Checkout = ({ products, setRun = f => f, run = undefined }) => {\r\n\r\n    const {user,token} = isAuthenticated()\r\n    const [error,setError] = useState(false)\r\n    const [success,setSuccess] = useState(false)\r\n    const [address,setAddress] = useState()\r\n\r\n    const getTotal = () => {\r\n        return products &&  products.reduce((currentValue, nextValue) => {\r\n            return currentValue + nextValue.count * nextValue.price;\r\n        }, 0);\r\n    };\r\n\r\n    const placeOrder = () => {\r\n        const orders = {\r\n            products:products,\r\n            amount:getTotal(),\r\n            address:address\r\n        }\r\n        createOrder(user._id,token,orders).then((data) => {\r\n            if(data.error){\r\n                setError(true)\r\n            }else{\r\n                deleteCart()\r\n                setRun(!run);\r\n                setSuccess(true)\r\n            }\r\n        })\r\n    }\r\n\r\n    const handleCloseSuccess = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setSuccess(false)\r\n    };\r\n\r\n    const showSuccess =() => (\r\n        <Snackbar open={success} autoHideDuration={6000} onClose={handleCloseSuccess}>\r\n            <Alert onClose={handleCloseSuccess} severity=\"success\">\r\n                Checked out successfully\r\n            </Alert>\r\n        </Snackbar>\r\n    )\r\n\r\n    const handleChange = (event) => {\r\n        setAddress(event.target.value)\r\n    }\r\n\r\n    const showCheckout = () => {\r\n        if(products.length > 0){\r\n            return isAuthenticated() ? (\r\n                <div>\r\n                    <h3>Checkout Address</h3>\r\n                    <textarea type=\"text\" onChange={handleChange} className=\"input-group mb-3\" placeholder=\"Enter your address\"/>\r\n                    <button onClick={placeOrder} className=\"btn btn-warning mt-2\">Checkout</button>\r\n                </div>\r\n            ) : (\r\n                <Link to=\"/signin\">\r\n                    <button className=\"btn btn-primary\">Sign in to checkout</button>\r\n                </Link>\r\n            );\r\n        }\r\n    };\r\n\r\n    const checkOutTable =() => {\r\n        if(products.length > 0){\r\n            return(\r\n                <tbody>\r\n                {products && products.map((product,i) => {\r\n                    return(\r\n                        <tr key={i}>\r\n                            <th scope=\"row\">{i+1}</th>\r\n                            <td>{product.name}</td>\r\n                            <td>{product.count}</td>\r\n                            <td>{product.price}</td>\r\n                            <td>{product.price*product.count}</td>\r\n                            <td>\r\n                                <button\r\n                                    type=\"button\" className=\"btn btn-sm btn-outline-danger\" aria-label=\"Close\"\r\n                                    onClick={() => {\r\n                                        removeItem(product._id);\r\n                                        setRun(!run); // run useEffect in parent Cart\r\n                                    }}\r\n                                >\r\n                                    X\r\n                                </button>\r\n                            </td>\r\n                        </tr>\r\n                    )\r\n                })}\r\n                </tbody>\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <table className=\"table table-sm table-active table-bordered\">\r\n                <thead>\r\n                <tr>\r\n                    <th scope=\"col\">S.No</th>\r\n                    <th scope=\"col\">Product</th>\r\n                    <th scope=\"col\">Quantity</th>\r\n                    <th scope=\"col\">Price</th>\r\n                    <th scope=\"col\">Subtotal</th>\r\n                    <th scope=\"col\">Remove</th>\r\n                </tr>\r\n                </thead>\r\n                {checkOutTable()}\r\n            </table>\r\n            <h4 className=\"mt-0 float-right\">Total: Rs.{getTotal()}</h4>\r\n            {showCheckout()}\r\n            {showSuccess()}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Checkout;","C:\\Users\\Sam\\Documents\\GitHub\\shopping\\ecommerce-front\\src\\core\\ShowImage.js",[],"C:\\Users\\Sam\\Documents\\GitHub\\shopping\\ecommerce-front\\src\\admin\\Orders.js",["295","296"],"import React, {useEffect, useState} from \"react\";\r\nimport {isAuthenticated} from '../auth'\r\nimport {listOrders,getStatusValue,updateOrderStatus} from \"./apiAdmin\";\r\nimport Layout from \"../core/Layout\";\r\nimport {Link} from 'react-router-dom'\r\nimport moment from \"moment\";\r\n\r\n\r\nconst Order = () => {\r\n    const [orders,setOrders] = useState([])\r\n    const [statusValues,setStatusValues] = useState([])\r\n    const [error,setError] = useState(false)\r\n\r\nconst {user,token} = isAuthenticated()\r\n\r\n\r\n    useEffect(() => {\r\n        loadOrders()\r\n        loadStatus()\r\n    },[])\r\n\r\n    const loadOrders = () => {\r\n        listOrders(user._id,token).then(data => {\r\n            if(data.error){\r\n                setError(data.error)\r\n            }else {\r\n                setOrders(data)\r\n                console.log(data)\r\n            }\r\n        })\r\n    }\r\n    const loadStatus = () => {\r\n        getStatusValue(user._id,token).then(data => {\r\n            if(data.error){\r\n                setError(data.error)\r\n            }else {\r\n                setStatusValues(data)\r\n                console.log(statusValues)\r\n            }\r\n        })\r\n    }\r\n\r\n    const handleStatusChange = (e,orderId) => {\r\n        updateOrderStatus(user._id,token,orderId,e.target.value).then(data => {\r\n            if(data.error){\r\n                console.log(data.error)\r\n            }else{\r\n                loadOrders()\r\n            }\r\n        })\r\n    }\r\n\r\n    const showStatus = o => {\r\n        return(\r\n            <div className=\"form-group\">\r\n                <h3 className=\"mark mb-4\"> Status : {o.status}</h3>\r\n                <select className=\"form-control\" onChange={(event) => handleStatusChange(event,o._id)}>\r\n                    <option>Update Status</option>\r\n                    {statusValues.map((status,index) => (\r\n                        <option key={index} value={status}>\r\n                            {status}\r\n                        </option>\r\n                    ))}\r\n                </select>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n    const goBack = () => (\r\n        <div className=\"mt-2\">\r\n            <Link to=\"/admin/dashboard\" >\r\n                <button className=\"btn btn-warning\">\r\n                    Back to Dashboard\r\n                </button>\r\n            </Link>\r\n        </div>\r\n    )\r\n\r\n    const orderCount = (orders) =>{\r\n        if(orders.length < 0){\r\n            return (\r\n                <div>\r\n                    <h2 className=\"text-danger\">No new Orders</h2>\r\n                    <Link to='/admin/dashboard'>\r\n                        <button className=\"btn btn-warning\">back to dashboard</button>\r\n                    </Link>\r\n                </div>\r\n            )\r\n        }else {\r\n            return <h2 className=\"text-danger text-sm-left mt-2\">Total Order {orders.length}</h2>\r\n        }\r\n    }\r\n\r\n\r\n    const showPorduct = (key,value) => (\r\n        <div className=\"input-group mb-2 mr-sm-2\">\r\n            <div className=\"input-group-prepend\">\r\n                <div className=\"input-group-text\">{key}</div>\r\n            </div>\r\n            <input type=\"text\" value={value} className=\"form-control\" readOnly />\r\n        </div>\r\n    )\r\n\r\n\r\n    return(\r\n        <Layout className=\"container-fluid\">\r\n            {goBack()}\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-md-8 offset-2\">\r\n                    {orderCount(orders)}\r\n                    {orders.map((o,oIndex) => {\r\n                        return(\r\n                            <div key={oIndex}>\r\n                                <h2 className=\"mt-2 btn-primary\">Order ID : {o._id}</h2>\r\n                                <ul className=\"list-group mb-2\">\r\n                                    <li className=\"list-group-item\">\r\n                                        {showStatus(o)}\r\n                                    </li>\r\n                                    <li className=\"list-group-item\">\r\n                                        Amount : Rs. {o.amount}\r\n                                    </li>\r\n                                    <li className=\"list-group-item\">\r\n                                        Ordered By : {o.user.name}\r\n                                    </li>\r\n                                    <li className=\"list-group-item\">\r\n                                        Ordered On : {moment(o.createdAt).fromNow()}\r\n                                    </li>\r\n                                    <li className=\"list-group-item\">\r\n                                        Delivary address : {o.address}\r\n                                    </li>\r\n                                </ul>\r\n                                <h2 className=\"mt-2 mb-4\">Total Product Count : {o.products.length}</h2>\r\n                                <p>\r\n                                    <button className=\"btn btn-secondary\" type=\"button\" data-bs-toggle=\"collapse\"\r\n                                            data-bs-target={`#collapseExample${oIndex}`} aria-expanded=\"false\"\r\n                                            aria-controls=\"collapseExample\">\r\n                                        Show Products\r\n                                    </button>\r\n                                </p>\r\n                                {o.products.map((p,pIndex) => {\r\n                                    return(\r\n                                        <div key={pIndex}>\r\n                                            <div className=\"collapse\" id={`collapseExample${oIndex}`}>\r\n                                                <div className=\"card card-body\">\r\n                                                    {showPorduct(\"Product Id\",p._id)}\r\n                                                    {showPorduct(\"Product Name\",p.name)}\r\n                                                    {showPorduct(\"Product Price\",p.price)}\r\n                                                    {showPorduct(\"Quantity\",p.count)}\r\n                                                    <hr/>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    )\r\n                                })}\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </Layout>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default Order","C:\\Users\\Sam\\Documents\\GitHub\\shopping\\ecommerce-front\\src\\user\\Profile.js",["297","298"],{"ruleId":"299","replacedBy":"300"},{"ruleId":"301","replacedBy":"302"},{"ruleId":"303","severity":1,"message":"304","line":1,"column":34,"nodeType":"305","messageId":"306","endLine":1,"endColumn":42},{"ruleId":"303","severity":1,"message":"307","line":10,"column":13,"nodeType":"305","messageId":"306","endLine":10,"endColumn":18},{"ruleId":"308","severity":1,"message":"309","line":58,"column":7,"nodeType":"310","endLine":58,"endColumn":9,"suggestions":"311"},{"ruleId":"303","severity":1,"message":"312","line":3,"column":9,"nodeType":"305","messageId":"306","endLine":3,"endColumn":20},{"ruleId":"303","severity":1,"message":"307","line":16,"column":12,"nodeType":"305","messageId":"306","endLine":16,"endColumn":17},{"ruleId":"303","severity":1,"message":"313","line":17,"column":18,"nodeType":"305","messageId":"306","endLine":17,"endColumn":26},{"ruleId":"308","severity":1,"message":"314","line":36,"column":7,"nodeType":"310","endLine":36,"endColumn":9,"suggestions":"315"},{"ruleId":"303","severity":1,"message":"316","line":1,"column":24,"nodeType":"305","messageId":"306","endLine":1,"endColumn":33},{"ruleId":"303","severity":1,"message":"317","line":4,"column":12,"nodeType":"305","messageId":"306","endLine":4,"endColumn":17},{"ruleId":"308","severity":1,"message":"318","line":29,"column":7,"nodeType":"310","endLine":29,"endColumn":9,"suggestions":"319"},{"ruleId":"303","severity":1,"message":"304","line":1,"column":34,"nodeType":"305","messageId":"306","endLine":1,"endColumn":42},{"ruleId":"303","severity":1,"message":"320","line":4,"column":8,"nodeType":"305","messageId":"306","endLine":4,"endColumn":12},{"ruleId":"303","severity":1,"message":"321","line":5,"column":8,"nodeType":"305","messageId":"306","endLine":5,"endColumn":17},{"ruleId":"303","severity":1,"message":"322","line":6,"column":8,"nodeType":"305","messageId":"306","endLine":6,"endColumn":14},{"ruleId":"303","severity":1,"message":"307","line":14,"column":12,"nodeType":"305","messageId":"306","endLine":14,"endColumn":17},{"ruleId":"303","severity":1,"message":"323","line":8,"column":8,"nodeType":"305","messageId":"306","endLine":8,"endColumn":14},{"ruleId":"299","replacedBy":"324"},{"ruleId":"301","replacedBy":"325"},{"ruleId":"303","severity":1,"message":"304","line":1,"column":34,"nodeType":"305","messageId":"306","endLine":1,"endColumn":42},{"ruleId":"303","severity":1,"message":"307","line":10,"column":13,"nodeType":"305","messageId":"306","endLine":10,"endColumn":18},{"ruleId":"303","severity":1,"message":"307","line":16,"column":12,"nodeType":"305","messageId":"306","endLine":16,"endColumn":17},{"ruleId":"308","severity":1,"message":"314","line":36,"column":7,"nodeType":"310","endLine":36,"endColumn":9,"suggestions":"326"},{"ruleId":"303","severity":1,"message":"304","line":1,"column":34,"nodeType":"305","messageId":"306","endLine":1,"endColumn":42},{"ruleId":"303","severity":1,"message":"320","line":4,"column":8,"nodeType":"305","messageId":"306","endLine":4,"endColumn":12},{"ruleId":"303","severity":1,"message":"322","line":6,"column":8,"nodeType":"305","messageId":"306","endLine":6,"endColumn":14},{"ruleId":"303","severity":1,"message":"327","line":7,"column":8,"nodeType":"305","messageId":"306","endLine":7,"endColumn":12},{"ruleId":"303","severity":1,"message":"307","line":13,"column":12,"nodeType":"305","messageId":"306","endLine":13,"endColumn":17},{"ruleId":"308","severity":1,"message":"309","line":59,"column":7,"nodeType":"310","endLine":59,"endColumn":9,"suggestions":"328"},{"ruleId":"303","severity":1,"message":"329","line":2,"column":10,"nodeType":"305","messageId":"306","endLine":2,"endColumn":14},{"ruleId":"303","severity":1,"message":"330","line":5,"column":9,"nodeType":"305","messageId":"306","endLine":5,"endColumn":19},{"ruleId":"303","severity":1,"message":"316","line":1,"column":24,"nodeType":"305","messageId":"306","endLine":1,"endColumn":33},{"ruleId":"308","severity":1,"message":"318","line":29,"column":7,"nodeType":"310","endLine":29,"endColumn":9,"suggestions":"331"},{"ruleId":"303","severity":1,"message":"332","line":1,"column":15,"nodeType":"305","messageId":"306","endLine":1,"endColumn":23},{"ruleId":"303","severity":1,"message":"333","line":2,"column":15,"nodeType":"305","messageId":"306","endLine":2,"endColumn":23},{"ruleId":"303","severity":1,"message":"322","line":5,"column":8,"nodeType":"305","messageId":"306","endLine":5,"endColumn":14},{"ruleId":"334","severity":1,"message":"335","line":25,"column":21,"nodeType":"336","endLine":25,"endColumn":69},{"ruleId":"337","severity":1,"message":"338","line":48,"column":30,"nodeType":"339","messageId":"340","endLine":48,"endColumn":32},{"ruleId":"341","severity":1,"message":"342","line":49,"column":28,"nodeType":"343","messageId":"344","endLine":49,"endColumn":30},{"ruleId":"337","severity":1,"message":"338","line":65,"column":30,"nodeType":"339","messageId":"340","endLine":65,"endColumn":32},{"ruleId":"341","severity":1,"message":"342","line":66,"column":28,"nodeType":"343","messageId":"344","endLine":66,"endColumn":30},{"ruleId":"303","severity":1,"message":"345","line":7,"column":9,"nodeType":"305","messageId":"306","endLine":7,"endColumn":24},{"ruleId":"303","severity":1,"message":"316","line":1,"column":27,"nodeType":"305","messageId":"306","endLine":1,"endColumn":36},{"ruleId":"303","severity":1,"message":"307","line":12,"column":12,"nodeType":"305","messageId":"306","endLine":12,"endColumn":17},{"ruleId":"303","severity":1,"message":"307","line":12,"column":12,"nodeType":"305","messageId":"306","endLine":12,"endColumn":17},{"ruleId":"308","severity":1,"message":"346","line":20,"column":7,"nodeType":"310","endLine":20,"endColumn":9,"suggestions":"347"},{"ruleId":"303","severity":1,"message":"345","line":3,"column":9,"nodeType":"305","messageId":"306","endLine":3,"endColumn":24},{"ruleId":"303","severity":1,"message":"329","line":4,"column":9,"nodeType":"305","messageId":"306","endLine":4,"endColumn":13},"no-native-reassign",["348"],"no-negated-in-lhs",["349"],"no-unused-vars","'Fragment' is defined but never used.","Identifier","unusedVar","'error' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'init'. Either include it or remove the dependency array.","ArrayExpression",["350"],"'getProducts' is defined but never used.","'setLimit' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'limit', 'loadFilteredResult', 'myFilter.filter', and 'skip'. Either include them or remove the dependency array.",["351"],"'useEffect' is defined but never used.","'value' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'loadCategory'. Either include it or remove the dependency array.",["352"],"'Menu' is defined but never used.","'MediaCard' is defined but never used.","'Search' is defined but never used.","'Button' is defined but never used.",["348"],["349"],["353"],"'Grid' is defined but never used.",["354"],"'Link' is defined but never used.","'FaCartPlus' is defined but never used.",["355"],"'useState' is defined but never used.","'Redirect' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'isAuthenticated' is defined but never used.","React Hook useEffect has missing dependencies: 'loadOrders' and 'loadStatus'. Either include them or remove the dependency array.",["356"],"no-global-assign","no-unsafe-negation",{"desc":"357","fix":"358"},{"desc":"359","fix":"360"},{"desc":"361","fix":"362"},{"desc":"359","fix":"363"},{"desc":"357","fix":"364"},{"desc":"361","fix":"365"},{"desc":"366","fix":"367"},"Update the dependencies array to be: [init]",{"range":"368","text":"369"},"Update the dependencies array to be: [limit, loadFilteredResult, myFilter.filter, skip]",{"range":"370","text":"371"},"Update the dependencies array to be: [loadCategory]",{"range":"372","text":"373"},{"range":"374","text":"371"},{"range":"375","text":"369"},{"range":"376","text":"373"},"Update the dependencies array to be: [loadOrders, loadStatus]",{"range":"377","text":"378"},[1440,1442],"[init]",[1031,1033],"[limit, loadFilteredResult, myFilter.filter, skip]",[699,701],"[loadCategory]",[1014,1016],[1480,1482],[699,701],[566,568],"[loadOrders, loadStatus]"]